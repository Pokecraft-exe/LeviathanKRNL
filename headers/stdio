#pragma once
#include "printf.h"
#include "IDT.h"
#include "color.hpp"
#include "string.hpp"

namespace std {
    extern char endl;
    
    template <typename t>
    char* hex(t data){
        return HexToString(data);
    }
    template <typename t>
    char* bin(t data){
        return binToStr(data);
    }

    class ostream {
    private:
        color::Color color_;
    public:
        ostream();
        ostream(color::Color);
        void color(color::Color);
        color::Color color();
        ostream operator <<(const char*);
        ostream operator <<(string);
        ostream operator <<(char);
        ostream operator <<(void*);

        ostream operator <<(int);
        ostream operator <<(uint8_t);
        ostream operator <<(uint16_t);
        ostream operator <<(uint32_t);
        ostream operator <<(uint64_t);
        ostream operator <<(float);
        ostream operator <<(double);
    };

    class istream {
    public:
        istream();
        istream operator >>(string&);
        istream operator >>(int&);
        istream operator >>(uint8_t&);
        istream operator >>(uint16_t&);
        istream operator >>(uint32_t&);
        istream operator >>(uint64_t&);
        istream operator >>(float&);
        istream operator >>(double&);
    };

    extern ostream cout;
    extern istream cin;
}
